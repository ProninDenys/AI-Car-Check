import os
import requests
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª
load_dotenv()

# –ö–ª—é—á API RapidAPI –∏ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
API_KEY = os.getenv("RAPIDAPI_KEY")
BOT_TOKEN = os.getenv("BOT_TOKEN")
VIN_API_URL = "https://vin-decoder-api-usa.p.rapidapi.com/vin"

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –±–æ—Ç–∞
def get_main_menu():
    keyboard = [
        ["üîç Check Car by VIN"],
        ["‚ùì FAQ"],
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ VIN
def get_car_info(vin_code):
    headers = {
        'X-RapidAPI-Key': API_KEY,
        'X-RapidAPI-Host': 'vin-decoder-api-usa.p.rapidapi.com'
    }
    params = {
        'v': vin_code
    }
    try:
        response = requests.get(VIN_API_URL, headers=headers, params=params)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
        return response.json()  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
    except requests.exceptions.RequestException as e:
        print(f"Error fetching VIN data: {e}")
        return None

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "Welcome to USA VIN Check Bot! Choose an option below:", 
        reply_markup=get_main_menu()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ VIN
async def handle_vin(update: Update, context: ContextTypes.DEFAULT_TYPE):
    vin_code = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ VIN (17 —Å–∏–º–≤–æ–ª–æ–≤)
    if len(vin_code) != 17:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π VIN –∫–æ–¥ –∏–∑ 17 —Å–∏–º–≤–æ–ª–æ–≤.")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—à–∏–Ω–µ —á–µ—Ä–µ–∑ API
    car_data = get_car_info(vin_code)
    
    if car_data:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –º–∞—à–∏–Ω–µ
        car_info = f"**–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—à–∏–Ω–µ –¥–ª—è VIN: {vin_code}**\n\n"
        car_info += f"**–ú–∞—Ä–∫–∞**: {car_data.get('make', 'N/A')}\n"
        car_info += f"**–ú–æ–¥–µ–ª—å**: {car_data.get('model', 'N/A')}\n"
        car_info += f"**–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞**: {car_data.get('year', 'N/A')}\n"
        car_info += f"**–¢–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è**: {car_data.get('engine', 'N/A')}\n"
        car_info += f"**–¢–∏–ø —Ç–æ–ø–ª–∏–≤–∞**: {car_data.get('fuel', 'N/A')}\n"
        car_info += f"**–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è**: {car_data.get('transmission', 'N/A')}\n"
        
        await update.message.reply_text(car_info)
    else:
        await update.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç—Ç–æ–º—É VIN –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        
# –û–±—Ä–∞–±–æ—Ç–∫–∞ FAQ
async def handle_faq(update: Update, context: ContextTypes.DEFAULT_TYPE):
    faq = """**FAQ:**
    - What is a VIN? 
      A Vehicle Identification Number (VIN) is a unique code used by the automotive industry to identify individual motor vehicles.
    
    - How can I use VIN Check?
      You can enter a VIN to check the vehicle's specifications, accident history, and more."""
    
    await update.message.reply_text(faq)

# –û—Å–Ω–æ–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    
    if text == "üîç Check Car by VIN":
        await update.message.reply_text("Please enter the VIN number of the car:")
    elif text == "‚ùì FAQ":
        await handle_faq(update, context)
    else:
        await update.message.reply_text("Sorry, I didn't understand that. Please choose an option from the menu.", reply_markup=get_main_menu())

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

print("USA VIN Check Bot is running...")
app.run_polling()